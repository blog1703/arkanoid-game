const gameArea = document.getElementById('game-area');
const paddle = document.getElementById('paddle');
const ball = document.getElementById('ball');
const scoreDisplay = document.getElementById('score');
const timerDisplay = document.getElementById('timer');
const startButton = document.getElementById('start-button');
const winMessage = document.getElementById('win-message'); // –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–±–µ–¥–µ
let score = 0;
let startTime = 0; // –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
let timerInterval; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
let gameActive = false; // –§–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã

let paddleX = gameArea.offsetWidth / 2 - 50; // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (—Ü–µ–Ω—Ç—Ä)
let ballX = gameArea.offsetWidth / 2 - 10;   // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è —à–∞—Ä–∏–∫–∞ (—Ü–µ–Ω—Ç—Ä)
let ballY = gameArea.offsetHeight / 2 - 10;
let ballSpeedX = 0; // –°–∫–æ—Ä–æ—Å—Ç—å —à–∞—Ä–∏–∫–∞ (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ 0)
let ballSpeedY = 0;

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
function isMobileDevice() {
    return (typeof window.orientation !== "undefined") || (navigator.userAgent.indexOf('IEMobile') !== -1);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –±–ª–æ–∫–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
const blockRows = isMobileDevice() ? 3 : 3; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –±–ª–æ–∫–æ–≤
const blockCols = isMobileDevice() ? 6 : 10; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –±–ª–æ–∫–æ–≤
const blockWidth = isMobileDevice() ? 30 : 50; // –®–∏—Ä–∏–Ω–∞ –±–ª–æ–∫–æ–≤
const blockHeight = isMobileDevice() ? 15 : 20; // –í—ã—Å–æ—Ç–∞ –±–ª–æ–∫–æ–≤
const blockPadding = isMobileDevice() ? 5 : 10; // –û—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏

// –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –±–ª–æ–∫–æ–≤
const blocks = [];

// –°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–æ–≤
function createBlocks() {
    for (let row = 0; row < blockRows; row++) {
        for (let col = 0; col < blockCols; col++) {
            const block = document.createElement('div');
            block.classList.add('block');
            block.style.width = `${blockWidth}px`;
            block.style.height = `${blockHeight}px`;
            block.style.left = `${col * (blockWidth + blockPadding)}px`;
            block.style.top = `${row * (blockHeight + blockPadding) + 70}px`; // –°–¥–≤–∏–≥–∞–µ–º –±–ª–æ–∫–∏ –Ω–∏–∂–µ
            gameArea.appendChild(block);
            blocks.push(block);
        }
    }
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π
if (isMobileDevice()) {
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    document.addEventListener('touchmove', (e) => {
        if (gameActive) {
            const rect = gameArea.getBoundingClientRect();
            paddleX = e.touches[0].clientX - rect.left - paddle.offsetWidth / 2;

            // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            const borderRadius = 10;
            if (paddleX < borderRadius) paddleX = borderRadius;
            if (paddleX > gameArea.offsetWidth - paddle.offsetWidth - borderRadius) {
                paddleX = gameArea.offsetWidth - paddle.offsetWidth - borderRadius;
            }

            paddle.style.left = `${paddleX}px`;
        }
    });

    ballSpeedX = 4; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å —à–∞—Ä–∞ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
    ballSpeedY = -4; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å —à–∞—Ä–∞ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
} else {
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ü–ö
    document.addEventListener('mousemove', (e) => {
        if (gameActive) {
            const rect = gameArea.getBoundingClientRect();
            paddleX = e.clientX - rect.left - paddle.offsetWidth / 2;

            // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            const borderRadius = 10;
            if (paddleX < borderRadius) paddleX = borderRadius;
            if (paddleX > gameArea.offsetWidth - paddle.offsetWidth - borderRadius) {
                paddleX = gameArea.offsetWidth - paddle.offsetWidth - borderRadius;
            }

            paddle.style.left = `${paddleX}px`;
        }
    });

    ballSpeedX = 3; // –°–∫–æ—Ä–æ—Å—Ç—å —à–∞—Ä–∞ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –¥–ª—è –ü–ö
    ballSpeedY = -3; // –°–∫–æ—Ä–æ—Å—Ç—å —à–∞—Ä–∞ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –¥–ª—è –ü–ö
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä—ã
function update() {
    if (!gameActive) return;

    // –î–≤–∏–∂–µ–Ω–∏–µ —à–∞—Ä–∏–∫–∞
    ballX += ballSpeedX;
    ballY += ballSpeedY;
    ball.style.left = `${ballX}px`;
    ball.style.top = `${ballY}px`;

    // –û—Ç—Å–∫–æ–∫ –æ—Ç —Å—Ç–µ–Ω
    if (ballX <= 0 || ballX >= gameArea.offsetWidth - ball.offsetWidth) {
        ballSpeedX = -ballSpeedX;
    }
    if (ballY <= 0) {
        ballSpeedY = -ballSpeedY;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ–∏–≥—Ä—ã—à (—à–∞—Ä–∏–∫ —É–ø–∞–ª –≤–Ω–∏–∑)
    if (ballY >= gameArea.offsetHeight - ball.offsetHeight) {
        clearInterval(timerInterval); // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞
        const elapsedTime = (Date.now() - startTime) / 1000; // –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        alert(`–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í–∞—à —Å—á–µ—Ç: ${score}. –í—Ä–µ–º—è: ${elapsedTime.toFixed(3)} —Å–µ–∫.`);
        resetGame();
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π
    const paddleRect = paddle.getBoundingClientRect();
    const ballRect = ball.getBoundingClientRect();

    if (
        ballRect.bottom >= paddleRect.top &&
        ballRect.top <= paddleRect.bottom &&
        ballRect.right >= paddleRect.left &&
        ballRect.left <= paddleRect.right
    ) {
        ballSpeedY = -ballSpeedY; // –û—Ç—Å–∫–æ–∫
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å –±–ª–æ–∫–∞–º–∏
    blocks.forEach((block, index) => {
        const blockRect = block.getBoundingClientRect();
        if (
            ballRect.bottom >= blockRect.top &&
            ballRect.top <= blockRect.bottom &&
            ballRect.right >= blockRect.left &&
            ballRect.left <= blockRect.right
        ) {
            ballSpeedY = -ballSpeedY; // –û—Ç—Å–∫–æ–∫
            gameArea.removeChild(block); // –£–¥–∞–ª–µ–Ω–∏–µ –±–ª–æ–∫–∞
            blocks.splice(index, 1); // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞
            score += 10; // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç–∞
            scoreDisplay.textContent = `–°—á–µ—Ç: ${score}`;

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É
            if (blocks.length === 0) {
                clearInterval(timerInterval); // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞
                const elapsedTime = (Date.now() - startTime) / 1000; // –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
                winMessage.classList.add('visible'); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–±–µ–¥–µ
                setTimeout(() => {
                    winMessage.classList.remove('visible'); // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                    alert(`–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π! üéâ –í–∞—à —Å—á–µ—Ç: ${score}. –í—Ä–µ–º—è: ${elapsedTime.toFixed(3)} —Å–µ–∫.`);
                }, 3000); // –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è 3 —Å–µ–∫—É–Ω–¥—ã
                resetGame();
            }
        }
    });

    requestAnimationFrame(update);
}

// –°–±—Ä–æ—Å –∏–≥—Ä—ã
function resetGame() {
    gameActive = false;
    startButton.style.display = 'block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–°—Ç–∞—Ä—Ç"
    ballX = gameArea.offsetWidth / 2 - 10; // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —à–∞—Ä–∏–∫
    ballY = gameArea.offsetHeight / 2 - 10;
    ballSpeedX = 0; // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞—Ä–∏–∫
    ballSpeedY = 0;
    score = 0;
    scoreDisplay.textContent = `–°—á–µ—Ç: ${score}`;
    timerDisplay.textContent = `–í—Ä–µ–º—è: 0.000`;

    // –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤
    blocks.forEach(block => gameArea.removeChild(block));
    blocks.length = 0;

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤
    createBlocks();

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    startTime = Date.now();
}

// –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã
startButton.addEventListener('click', () => {
    gameActive = true;
    startButton.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–°—Ç–∞—Ä—Ç"
    startTime = Date.now(); // –§–∏–∫—Å–∏—Ä—É–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    ballSpeedX = 3; // –ó–∞–ø—É—Å–∫–∞–µ–º —à–∞—Ä–∏–∫
    ballSpeedY = -3; // –®–∞—Ä–∏–∫ –ª–µ—Ç–∏—Ç –≤–≤–µ—Ä—Ö
    timerInterval = setInterval(() => {
        const elapsedTime = (Date.now() - startTime) / 1000; // –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        timerDisplay.textContent = `–í—Ä–µ–º—è: ${elapsedTime.toFixed(3)}`; // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞–º–∏
    }, 10); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 10 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥
    update();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
resetGame();